import React, { useState, useEffect } from 'react';
import { ChevronRight, Loader } from 'lucide-react';
import { PresupuestoLinea } from '../../../../../services/db';
import { generateScopeSeed, ScopeSeededData } from '../services/scopeSeedService';

interface WizardStepSemillaProps {
  year: number;
  scopes: ('PERSONAL' | 'INMUEBLES')[];
  startMonth: number;
  isFullYear: boolean;
  initialLines: Omit<PresupuestoLinea, 'id' | 'presupuestoId'>[];
  onComplete: (lines: Omit<PresupuestoLinea, 'id' | 'presupuestoId'>[]) => void;
}

const WizardStepSemilla: React.FC<WizardStepSemillaProps> = ({
  year,
  scope,
  initialLines,
  onComplete
}) => {
  const [lines, setLines] = useState<Omit<BudgetLine, 'id' | 'budgetId'>[]>(initialLines);
  const [loading, setLoading] = useState(false);

  useEffect(() => {
    if (lines.length === 0) {
      generateSeed();
    }
  }, []); // eslint-disable-line react-hooks/exhaustive-deps

  const generateSeed = async () => {
    try {
      setLoading(true);
      const seedLines = await generateBudgetSeed(
        year,
        scope.propertyIds,
        scope.isFullYear,
        scope.startMonth
      );
      setLines(seedLines);
    } catch (error) {
      console.error('Error generating seed:', error);
    } finally {
      setLoading(false);
    }
  };

  const handleContinue = () => {
    onComplete(lines);
  };

  if (loading) {
    return (
      <div className="flex justify-center py-12">
        <div className="flex items-center space-x-3">
          <Loader className="h-6 w-6 animate-spin text-primary-600" />
          <span className="text-gray-600">Generando semilla automática...</span>
        </div>
      </div>
    );
  }

  return (
    <div className="max-w-4xl mx-auto">
      <div className="mb-8">
        <h2 className="text-2xl font-bold text-gray-900 mb-2">Semilla Automática</h2>
        <p className="text-gray-600">
          Hemos precargado automáticamente los datos base desde contratos, préstamos e históricos.
        </p>
      </div>

      {/* Summary */}
      <div className="bg-white border border-gray-200 rounded-lg p-6 mb-6">
        <h3 className="font-semibold text-gray-900 mb-4">Resumen de líneas generadas</h3>
        
        <div className="grid grid-cols-2 gap-4">
          <div>
            <div className="text-sm text-gray-600">Líneas de ingresos</div>
            <div className="text-lg font-semibold text-success-600">
              {lines.filter(l => l.category === 'ingresos-alquiler').length}
            </div>
          </div>
          <div>
            <div className="text-sm text-gray-600">Líneas de gastos</div>
            <div className="text-lg font-semibold text-error-600">
              {lines.filter(l => l.category !== 'ingresos-alquiler').length}
            </div>
          </div>
        </div>
      </div>

      {/* Auto-generated Lines */}
      <div className="bg-white border border-gray-200 rounded-lg mb-6">
        <div className="px-6 py-4 border-b border-gray-200">
          <h3 className="font-semibold text-gray-900">Líneas pre-cargadas</h3>
          <p className="text-sm text-gray-600">
            Datos extraídos automáticamente. Podrás editarlos en el siguiente paso.
          </p>
        </div>
        
        <div className="divide-y divide-gray-200 max-h-96 overflow-y-auto">
          {lines.map((line, index) => (
            <div key={index} className="px-6 py-3">
              <div className="flex items-center justify-between">
                <div>
                  <div className="font-medium text-gray-900">{line.description}</div>
                  <div className="text-sm text-gray-600 capitalize">
                    {line.category.replace('-', ' & ')} • {line.frequency}
                  </div>
                </div>
                <div className="text-right">
                  <div className="font-medium text-gray-900">
                    {line.amount.toLocaleString('es-ES')} €
                  </div>
                  <div className="text-sm text-gray-600">
                    {line.isAutoGenerated ? 'Auto-generado' : 'Completar'}
                  </div>
                </div>
              </div>
            </div>
          ))}
        </div>
      </div>

      {/* Continue Button */}
      <div className="flex justify-end">
        <button
          onClick={handleContinue}
          className="flex items-center px-6 py-3 bg-primary-600 text-white rounded-lg hover:bg-primary-700 transition-colors font-medium"
        >
          Continuar a revisión
          <ChevronRight className="h-4 w-4 ml-2" />
        </button>
      </div>
    </div>
  );
};

export default WizardStepSemilla;